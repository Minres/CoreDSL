/*
 * generated by Xtext 2.25.0
 */
package com.minres.coredsl.generator

import com.minres.coredsl.services.visualization.Visualizer
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import com.minres.coredsl.services.visualization.VisualGraph
import com.minres.coredsl.services.visualization.dot.DotBuilder
import java.io.PrintWriter
import java.io.ByteArrayOutputStream

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class CoreDslGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		if(resource.contents.size != 1)
			throw new RuntimeException("Expected exactly one root node");
		
		var out = new ByteArrayOutputStream();
		var VisualGraph graph = new Visualizer().buildVisualGraph(resource.contents.get(0), true);
		new DotBuilder().buildGraph(graph, new PrintWriter(out), true);
		
		var path = resource.URI.toFileString;
		
		var index = path.lastIndexOf('.');
		if(index != -1) path = path.substring(0, index);
			
		index = path.lastIndexOf('/');
		if(index != -1) path = path.substring(index + 1);
		
		index = path.lastIndexOf('\\');
		if(index != -1) path = path.substring(index + 1);
			
		fsa.generateFile(path + ".dot", out.toString);
	}
}
